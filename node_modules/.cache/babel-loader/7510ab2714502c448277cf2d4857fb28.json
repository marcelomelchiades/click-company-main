{"ast":null,"code":"import _classCallCheck from \"/home/clickc/www/click-company-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/clickc/www/click-company-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/clickc/www/click-company-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/clickc/www/click-company-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from \"react\";\nimport ReactResizeDetector from \"react-resize-detector\";\nvar DEFAULT_GAP = 32;\nexport var Masonry = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  var _super = _createSuper(Masonry);\n\n  function Masonry() {\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      containerWidth: _this.props.containerWidth\n    };\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          _this$props$gap = _this$props.gap,\n          gap = _this$props$gap === void 0 ? DEFAULT_GAP : _this$props$gap,\n          items = _this$props.items,\n          minColumnWidth = _this$props.minColumnWidth;\n      var containerWidth = this.state.containerWidth;\n      var margin = gap / 2;\n      var count = containerWidth !== undefined ? columnCount(containerWidth, gap, minColumnWidth) : null;\n      var content = null;\n\n      if (count !== null && items.length > 0) {\n        var columns = sort(count, items);\n        content = React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            margin: -margin\n          }\n        }, columns.map(function (c, i) {\n          return React.createElement(\"div\", {\n            key: i,\n            style: {\n              flex: \"1 1 auto\",\n              width: \"\".concat(100 / columns.length, \"%\")\n            }\n          }, c.map(function (i) {\n            return React.createElement(\"div\", {\n              key: i.key,\n              style: {\n                padding: margin\n              }\n            }, i.node);\n          }));\n        }));\n      }\n\n      return React.createElement(React.Fragment, null, content, process.env.NODE_ENV === \"test\" ? null : React.createElement(ReactResizeDetector, {\n        handleWidth: true,\n        onResize: function onResize(width) {\n          return _this2.setState({\n            containerWidth: width\n          });\n        }\n      }));\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent);\n\nfunction sort(count, items) {\n  var columns = Array.apply([], Array(count));\n  columns = columns.map(function () {\n    return [];\n  });\n  var curr = 0;\n\n  for (var i in items) {\n    columns[curr].push(items[i]);\n    curr = curr < count - 1 ? curr + 1 : 0;\n  }\n\n  return columns;\n}\n\nfunction columnCount(containerWidth, gap, minColumnWidth) {\n  var columns = Math.floor((containerWidth + gap) / (minColumnWidth + gap));\n  return Math.max(columns, 1);\n}","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from \"react\";\nimport ReactResizeDetector from \"react-resize-detector\";\nconst DEFAULT_GAP = 32;\nexport class Masonry extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            containerWidth: this.props.containerWidth\n        };\n    }\n    render() {\n        const { gap = DEFAULT_GAP, items, minColumnWidth } = this.props;\n        const { containerWidth } = this.state;\n        const margin = gap / 2;\n        const count = containerWidth !== undefined ? columnCount(containerWidth, gap, minColumnWidth) : null;\n        let content = null;\n        if (count !== null && items.length > 0) {\n            const columns = sort(count, items);\n            content = (React.createElement(\"div\", { style: { display: \"flex\", margin: -margin } }, columns.map((c, i) => (React.createElement(\"div\", { key: i, style: { flex: \"1 1 auto\", width: `${100 / columns.length}%` } }, c.map(i => (React.createElement(\"div\", { key: i.key, style: { padding: margin } }, i.node))))))));\n        }\n        return (React.createElement(React.Fragment, null,\n            content,\n            process.env.NODE_ENV === \"test\" ? null : (React.createElement(ReactResizeDetector, { handleWidth: true, onResize: width => this.setState({ containerWidth: width }) }))));\n    }\n}\nfunction sort(count, items) {\n    let columns = Array.apply([], Array(count));\n    columns = columns.map(() => []);\n    let curr = 0;\n    for (const i in items) {\n        columns[curr].push(items[i]);\n        curr = curr < count - 1 ? curr + 1 : 0;\n    }\n    return columns;\n}\nfunction columnCount(containerWidth, gap, minColumnWidth) {\n    const columns = Math.floor((containerWidth + gap) / (minColumnWidth + gap));\n    return Math.max(columns, 1);\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}