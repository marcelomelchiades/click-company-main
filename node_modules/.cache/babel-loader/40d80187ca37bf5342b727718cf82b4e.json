{"ast":null,"code":"import _classCallCheck from \"/home/clickc/www/click-company-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/clickc/www/click-company-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/clickc/www/click-company-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/clickc/www/click-company-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport * as React from \"react\";\nimport ReactResizeDetector from \"react-resize-detector\";\nvar DEFAULT_GAP = 32;\nexport var Masonry = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n  var _super = _createSuper(Masonry);\n  function Masonry() {\n    var _this;\n    _classCallCheck(this, Masonry);\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      containerWidth: _this.props.containerWidth\n    };\n    return _this;\n  }\n  _createClass(Masonry, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        _this$props$gap = _this$props.gap,\n        gap = _this$props$gap === void 0 ? DEFAULT_GAP : _this$props$gap,\n        items = _this$props.items,\n        minColumnWidth = _this$props.minColumnWidth;\n      var containerWidth = this.state.containerWidth;\n      var margin = gap / 2;\n      var count = containerWidth !== undefined ? columnCount(containerWidth, gap, minColumnWidth) : null;\n      var content = null;\n      if (count !== null && items.length > 0) {\n        var columns = sort(count, items);\n        content = React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            margin: -margin\n          }\n        }, columns.map(function (c, i) {\n          return React.createElement(\"div\", {\n            key: i,\n            style: {\n              flex: \"1 1 auto\",\n              width: \"\".concat(100 / columns.length, \"%\")\n            }\n          }, c.map(function (i) {\n            return React.createElement(\"div\", {\n              key: i.key,\n              style: {\n                padding: margin\n              }\n            }, i.node);\n          }));\n        }));\n      }\n      return React.createElement(React.Fragment, null, content, process.env.NODE_ENV === \"test\" ? null : React.createElement(ReactResizeDetector, {\n        handleWidth: true,\n        onResize: function onResize(width) {\n          return _this2.setState({\n            containerWidth: width\n          });\n        }\n      }));\n    }\n  }]);\n  return Masonry;\n}(React.PureComponent);\nfunction sort(count, items) {\n  var columns = Array.apply([], Array(count));\n  columns = columns.map(function () {\n    return [];\n  });\n  var curr = 0;\n  for (var i in items) {\n    columns[curr].push(items[i]);\n    curr = curr < count - 1 ? curr + 1 : 0;\n  }\n  return columns;\n}\nfunction columnCount(containerWidth, gap, minColumnWidth) {\n  var columns = Math.floor((containerWidth + gap) / (minColumnWidth + gap));\n  return Math.max(columns, 1);\n}","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from \"react\";\nimport ReactResizeDetector from \"react-resize-detector\";\nconst DEFAULT_GAP = 32;\nexport class Masonry extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            containerWidth: this.props.containerWidth\n        };\n    }\n    render() {\n        const { gap = DEFAULT_GAP, items, minColumnWidth } = this.props;\n        const { containerWidth } = this.state;\n        const margin = gap / 2;\n        const count = containerWidth !== undefined ? columnCount(containerWidth, gap, minColumnWidth) : null;\n        let content = null;\n        if (count !== null && items.length > 0) {\n            const columns = sort(count, items);\n            content = (React.createElement(\"div\", { style: { display: \"flex\", margin: -margin } }, columns.map((c, i) => (React.createElement(\"div\", { key: i, style: { flex: \"1 1 auto\", width: `${100 / columns.length}%` } }, c.map(i => (React.createElement(\"div\", { key: i.key, style: { padding: margin } }, i.node))))))));\n        }\n        return (React.createElement(React.Fragment, null,\n            content,\n            process.env.NODE_ENV === \"test\" ? null : (React.createElement(ReactResizeDetector, { handleWidth: true, onResize: width => this.setState({ containerWidth: width }) }))));\n    }\n}\nfunction sort(count, items) {\n    let columns = Array.apply([], Array(count));\n    columns = columns.map(() => []);\n    let curr = 0;\n    for (const i in items) {\n        columns[curr].push(items[i]);\n        curr = curr < count - 1 ? curr + 1 : 0;\n    }\n    return columns;\n}\nfunction columnCount(containerWidth, gap, minColumnWidth) {\n    const columns = Math.floor((containerWidth + gap) / (minColumnWidth + gap));\n    return Math.max(columns, 1);\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}